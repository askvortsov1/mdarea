{"version":3,"sources":["mdarea.js"],"names":["root","factory","define","amd","module","exports","MarkdownArea","self","this","ctrlKey","test","navigator","platform","reInlineKey","rePrefix","reList","reCleanIndent","rePureIndent","reIncrement","reStripLast","reMkIndent","openingParens","[","(","{","<","closingParens","]",")","}",">","elem","_useTab","_useInline","_indent","_reOutdent","_reKey","makeKeyRe","_handleKey","bind","setElement","tab","inline","RegExp","apply","value","s","e","selectionStart","selectionEnd","arguments","length","window","evt","InputEvent","dispatchEvent","prototype","constructor","getElement","_elem","removeEventListener","addEventListener","getValue","setValue","getIndent","setIndent","indent","Array","join","replace","isTabUsed","useTab","ignoreTab","isInlineEnabled","enableInline","disableInline","destroy","key","prefix","target","substring","selection","postfix","shift","info","str","offset","lastIndexOf","line","m","exec","_","n","parseInt","pure","handleEnterKey","shiftKey","handleIndentKey","reOutdent","handleOutdentKey","charAt","preventDefault"],"mappings":"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","file":"mdarea.min.js","sourcesContent":["(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.MarkdownArea = factory();\n    }\n})(typeof self !== 'undefined' ? self : this, function() {\n\n    var isMac = /mac|iphone|ipad|ipod/i.test(navigator.platform),\n        ctrlKey = isMac ? 'metaKey' : 'ctrlKey',\n        reInlineKey = /^[\"'`*_[({<>})\\]]$/,\n        rePrefix = /^[ \\t]*(?:(?:[-+*]|\\d+\\.)[ \\t]+(?:\\[[ x]][ \\t]+)?|>[ \\t]*)*(?::[ \\t]*)?/,\n        reList = /(?:[-+*]|\\d+\\.)[ \\t]+(?:\\[[ x]][ \\t]+)?$/,\n        reCleanIndent = /[-+*\\[\\]x\\d.]/g,\n        rePureIndent = /[^ \\t]/g,\n        reIncrement = /(\\d+)\\.(?=[ \\t]+$)/,\n        reStripLast = /(?:(?:^[ \\t]+)?(?:[-+*]|\\d+\\.|[>:])(?:[ \\t]+\\[[ x]])?[ \\t]*|^[ \\t]+)$/,\n        reMkIndent = /^(?!$)/mg,\n        openingParens = {'[': ']', '(': ')', '{': '}', '<': '>'},\n        closingParens = {']': '[', ')': '(', '}': '{', '>': '<'};\n\n\n    function MarkdownArea(elem) {\n        this._useTab = true;\n        this._useInline = true;\n        this._indent = '    ';\n        this._reOutdent = /^[ ]{4}/mg;\n        this._reKey = makeKeyRe(true, true);\n        this._handleKey = this._handleKey.bind(this);\n        this.setElement(elem);\n    }\n\n    MarkdownArea.prototype = {\n        constructor: MarkdownArea,\n\n        getElement: function () {\n            return this._elem;\n        },\n\n        setElement: function (elem) {\n            if (this._elem) {\n                this._elem.removeEventListener('keydown', this._handleKey);\n            }\n\n            this._elem = elem;\n            elem.addEventListener('keydown', this._handleKey);\n        },\n\n        getValue: function () {\n            return this._elem.value;\n        },\n\n        setValue: function (value) {\n            this._elem.value = value;\n        },\n\n        getIndent: function () {\n            return this._indent;\n        },\n\n        setIndent: function (indent) {\n            if (typeof indent === 'number') {\n                this._indent = new Array(indent + 1).join(' ');\n            } else {\n                this._indent = (indent + '').replace(/[^ \\t]/g, ' ');\n            }\n\n            this._reOutdent = new RegExp('^' + this._indent, 'mg');\n        },\n\n        isTabUsed: function () {\n            return this._useTab;\n        },\n\n        useTab: function () {\n            this._useTab = true;\n            this._reKey = makeKeyRe(true, this._useInline);\n        },\n\n        ignoreTab: function () {\n            this._useTab = false;\n            this._reKey = makeKeyRe(false, this._useInline);\n        },\n\n        isInlineEnabled: function() {\n            return this._useInline;\n        },\n\n        enableInline: function () {\n            this._useInline = true;\n            this._reKey = makeKeyRe(this._useTab, true);\n        },\n\n        disableInline: function () {\n            this._useInline = false;\n            this._reKey = makeKeyRe(this._useTab, false);\n        },\n\n        destroy: function () {\n            this._elem.removeEventListener('keydown', this._handleKey);\n            this._elem = this._reKey = this._handleKey = this._indent = this._reOutdent = null;\n        },\n\n        _handleKey: function (evt) {\n            if (this._reKey.test(evt.key)) {\n                var prefix = evt.target.value.substring(0, evt.target.selectionStart),\n                    selection = evt.target.value.substring(evt.target.selectionStart, evt.target.selectionEnd),\n                    postfix = evt.target.value.substring(evt.target.selectionEnd);\n\n                if (evt.key === 'Enter') {\n                    handleEnterKey(this._elem, prefix, selection, postfix, evt.shiftKey);\n                } else if (evt.key === 'Tab' && !evt.shiftKey || evt.key === 'i' && evt[ctrlKey]) {\n                    handleIndentKey(this._elem, prefix, selection, postfix, this._indent);\n                } else if (evt.key === 'Tab' && evt.shiftKey || evt.key === 'o' && evt[ctrlKey]) {\n                    handleOutdentKey(this._elem, prefix, selection, postfix, this._indent, this._reOutdent);\n                } else if (reInlineKey.test(evt.key)) {\n                    handleInlineKey(this._elem, prefix, selection, postfix, evt.key);\n                } else {\n                    return;\n                }\n\n                evt.preventDefault();\n            }\n        }\n    };\n\n\n    function makeKeyRe(tab, inline) {\n        return new RegExp('^(?:Enter' + (tab ? '|Tab' : '') + '|[io' + (inline ? '\"\\'`*_([{<>}\\\\])' : '') + '])$');\n    }\n\n\n    function handleEnterKey (elem, prefix, selection, postfix, shift) {\n        var info = !selection ? getLineInfo(prefix) : null;\n\n        if (!selection && info.prefix) {\n            if (!shift && info.prefix === info.line) {\n                prefix = prefix.substring(0, info.offset) + stripLast(info.prefix);\n            } else if (!shift && isList(info.prefix)) {\n                prefix += \"\\n\" + increment(info.prefix);\n            } else {\n                prefix += \"\\n\" + toIndent(info.prefix, shift);\n            }\n        } else {\n            prefix += \"\\n\";\n        }\n\n        apply(elem, prefix + postfix, prefix.length);\n    }\n\n    function handleIndentKey (elem, prefix, selection, postfix, indent) {\n        var s = prefix.length,\n            n = prefix.lastIndexOf(\"\\n\") + 1;\n\n        if (n < s) {\n            selection = prefix.substring(n) + selection;\n            prefix = prefix.substring(0, n);\n        }\n\n        if (n < s || !selection) {\n            s += indent.length;\n        }\n\n        if (selection) {\n            selection = selection.replace(reMkIndent, indent);\n        } else {\n            prefix += indent;\n        }\n\n        apply(elem, prefix + selection + postfix, s, n + selection.length);\n    }\n\n    function handleOutdentKey (elem, prefix, selection, postfix, indent, reOutdent) {\n        var s = prefix.length,\n            n = prefix.lastIndexOf(\"\\n\") + 1;\n\n        if (n < s) {\n            selection = prefix.substring(n) + selection;\n            prefix = prefix.substring(0, n);\n\n            if (selection.substring(0, indent.length) === indent) {\n                s -= indent.length;\n            }\n        }\n\n        selection = selection.replace(reOutdent, '');\n        apply(elem, prefix + selection + postfix, s, n + selection.length);\n    }\n\n    function handleInlineKey (elem, prefix, selection, postfix, key) {\n        if (!selection && !(key in openingParens) && postfix.charAt(0) === key) {\n            apply(elem, prefix + postfix, prefix.length + 1);\n        } else if (!selection && key in closingParens) {\n            apply(elem, prefix + key + postfix, prefix.length + 1);\n        } else {\n            apply(\n                elem,\n                prefix + (closingParens[key] || key) + selection + (openingParens[key] || key) + postfix,\n                prefix.length + 1,\n                prefix.length + 1 + selection.length\n            );\n        }\n    }\n\n    function apply(elem, value, s, e) {\n        elem.value = value;\n        elem.selectionStart = s;\n        elem.selectionEnd = arguments.length > 3 ? e : s;\n\n        if ('InputEvent' in window) try {\n            var evt = new InputEvent('input');\n            elem.dispatchEvent(evt);\n        } catch (e) { }\n    }\n\n    function getLineInfo(str) {\n        var offset = str.lastIndexOf(\"\\n\") + 1,\n            line = str.substring(offset),\n            m = rePrefix.exec(line);\n\n        return {\n            line: line,\n            offset: offset,\n            prefix: m && m[0]\n        };\n    }\n\n    function isList(prefix) {\n        return reList.test(prefix);\n    }\n\n    function toIndent(prefix, pure) {\n        return prefix.replace(pure ? rePureIndent : reCleanIndent, ' ');\n    }\n\n    function increment(prefix) {\n        return prefix.replace(reIncrement, function (_, n) {\n            return (parseInt(n) + 1) + '.';\n        })\n    }\n\n    function stripLast(prefix) {\n        return prefix.replace(reStripLast, '');\n    }\n\n\n    return MarkdownArea;\n\n});\n"]}